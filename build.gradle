plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group = 'ru.solonin'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def selenideVersion = "6.16.0",
    restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.9",
    appiumVersion = "8.3.0",
    javaFakerVersion = "1.0.2"

allure
        {
            report {
                version.set(allureVersion)
            }
            adapter {
                aspectjWeaver.set(true)
                frameworks {
                    junit5 {
                        adapterVersion.set(allureVersion)
                    }
                }
            }
        }

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.appium:java-client:$appiumVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "commons-io:commons-io:2.11.0",
            'org.aeonbits.owner:owner:1.0.4',
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            'org.assertj:assertj-core:3.24.2',
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}


tasks.register('mobile', Test) {
    useJUnitPlatform {
        includeTags("mobile")
    }
}
tasks.register('web', Test) {
    useJUnitPlatform {
        includeTags("web")
    }
}
tasks.register('api', Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}